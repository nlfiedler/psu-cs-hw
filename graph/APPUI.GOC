/********************************************************************
 *
 * Copyright (c) 1996 Blue Marsh Softworks -- All Rights Reserved.
 *
 * PROJECT:      COMP 413 Software Engineering Project
 * MODULE:       Static Objects Module
 * FILE:         appUI.goc
 *
 * AUTHOR:       Nathan Fiedler
 *
 * REVISION HISTORY:
 *      Name     Date      Description
 *      ----     ----      -----------
 *       NF      03/07/96  Initial version
 *
 * DESCRIPTION:
 *      This program demonstrates the various graph algorithms,
 *      such as Prim's minimum spanning tree, or the BFS search.
 *      It is meant to be instructional, used primarily by
 *      algorithms class students.
 *
 *******************************************************************/

/********************************************************************
 *                 Headers
 *******************************************************************/
    @include <stdapp.goh>          /* Standard GEOS includes. */
    @include <objects/gviewcc.goh> /* GenViewControl */
    @include <spool.goh>           /* Spool library */
    #include <print.h>             /* Printer definitions */
    #include "graph.h"             /* Ken's code */
    @include "app.goh"             /* Our classes and constants. */

/********************************************************************
 *                 Global Definitions
 *******************************************************************/
     /* Graphics state to draw to. */
  GStateHandle gstate_g;
     /* Character user has entered. */
  char chCharacter_g;
     /* Handle of the open document. */
  FileHandle fileHan_g;
     /* Handle of the views window. */
  WindowHandle winHan_g;
     /* Used in the BFS and DFS. */
  VertexNumList verticesSelected_g;

/********************************************************************
 *                 Class Declarations
 *******************************************************************/
    @classdecl GProcessClass, neverSaved;
    @classdecl GPrimaryClass;
    @classdecl GViewClass;
    @classdecl GDocumentClass;

/********************************************************************
 *                 Method Declarations
 *******************************************************************/
    @extern method GProcessClass, MSG_META_SAVE_OPTIONS;
    @extern method GProcessClass, MSG_G_PROCESS_VERTEX_ADD;
    @extern method GProcessClass, MSG_G_PROCESS_VERTEX_REMOVE;
    @extern method GProcessClass, MSG_G_PROCESS_VERTEX_RANDOM;
    @extern method GProcessClass, MSG_G_PROCESS_VERTEX_SELECT_ALL;
    @extern method GProcessClass, MSG_G_PROCESS_VERTEX_UNSELECT_ALL;
    @extern method GProcessClass, MSG_G_PROCESS_EDGE_ADD;
    @extern method GProcessClass, MSG_G_PROCESS_EDGE_REMOVE;
    @extern method GProcessClass, MSG_G_PROCESS_EDGE_RANDOM;
    @extern method GProcessClass, MSG_G_PROCESS_EDGE_SELECT_ALL;
    @extern method GProcessClass, MSG_G_PROCESS_EDGE_UNSELECT_ALL;
    @extern method GProcessClass, MSG_G_PROCESS_MST_KRUSKALS;
    @extern method GProcessClass, MSG_G_PROCESS_MST_PRIMS;
    @extern method GProcessClass, MSG_G_PROCESS_MST_BOTH;
    @extern method GProcessClass, MSG_G_PROCESS_SEARCH_BFS;
    @extern method GProcessClass, MSG_G_PROCESS_SEARCH_DFS;
    @extern method GProcessClass, MSG_G_PROCESS_SEARCH_BOTH;
    @extern method GProcessClass, MSG_G_PROCESS_SHORTEST_PATH;
    @extern method GProcessClass, MSG_G_PROCESS_MAKE_COMPLETE;

    @extern method GViewClass, MSG_META_KBD_CHAR;

    @extern method GPrimaryClass, MSG_GEN_DISPLAY_CLOSE;

    @extern method GDocumentClass,
                       MSG_GEN_DOCUMENT_INITIALIZE_DOCUMENT_FILE;
    @extern method GDocumentClass,
                       MSG_GEN_DOCUMENT_ATTACH_UI_TO_DOCUMENT;
    @extern method GDocumentClass,
                       MSG_GEN_DOCUMENT_DETACH_UI_FROM_DOCUMENT;
    @extern method GDocumentClass, MSG_GEN_DOCUMENT_PHYSICAL_REVERT;
    @extern method GDocumentClass, MSG_GEN_DOCUMENT_PHYSICAL_SAVE,
                                     MSG_GEN_DOCUMENT_PHYSICAL_UPDATE;
    @extern method GDocumentClass,
                       MSG_GEN_DOCUMENT_PHYSICAL_SAVE_AS_FILE_HANDLE;
    @extern method GDocumentClass, MSG_META_EXPOSED;
    @extern method GDocumentClass, MSG_META_START_SELECT;
    @extern method GDocumentClass, MSG_META_END_SELECT;
    @extern method GDocumentClass, MSG_PRINT_START_PRINTING;

/********************************************************************
 *                 GOC Static Objects
 ********************************************************************
 *       AppResource
 *******************************************************************/
@start AppResource;

   /* System communicates with this object. */
@object GenApplicationClass GApp = {
  GI_visMoniker = list { @GTextMoniker };
  GI_comp = @GPrimary;
  gcnList( MANUFACTURER_ID_GEOWORKS, GAGCNLT_WINDOWS ) =
           @GPrimary;
  gcnList( MANUFACTURER_ID_GEOWORKS, MGCNLT_ACTIVE_LIST ) =
           @GViewControl,
           @GPrintControl,
           @GDocumentControl;
  gcnList( MANUFACTURER_ID_GEOWORKS, MGCNLT_APP_STARTUP ) =
           @GDocumentControl;
  gcnList( MANUFACTURER_ID_GEOWORKS, GAGCNLT_STARTUP_LOAD_OPTIONS ) =
           @GToolControl;
  gcnList( MANUFACTURER_ID_GEOWORKS, GAGCNLT_SELF_LOAD_OPTIONS ) =
           @GDocumentControl,
           @GPrintControl,
           @GViewControl,
           @GToolControl;
  ATTR_GEN_INIT_FILE_CATEGORY = INI_CATEGORY;
  ATTR_GEN_APPLICATION_PRINT_CONTROL = @GPrintControl;
  HINT_APP_IS_PRODUCTIVITY_ORIENTED;
}

@visMoniker GTextMoniker = "Graph";
@localize { "This name appears on the main title bar." };

@end AppResource;

/********************************************************************
 *       Interface
 *******************************************************************/
@start Interface;

   /* Primary window */
@object GenPrimaryClass GPrimary = {
  GI_attrs = @default | GA_KBD_SEARCH_PATH;
  GI_comp = @GFileGroup,
            @GViewGroup,
            @GOptionsGroup,
            @GVertexGroup,
            @GEdgeGroup,
            @GMSTGroup,
            @GSearchGroup,
            @GOtherGroup,
            @GToolbar,
            @GDisplayGroup,
            @GDummyGroup;
  ATTR_GEN_HELP_CONTEXT = "TOC";
}

   /* File menu
    * Prevent the OmniGo from having the Exit trigger
    * by not telling it that this is the file menu. */
@object GenInteractionClass GFileGroup = {
  GI_attrs = @default | GA_KBD_SEARCH_PATH;
  GI_comp = @GDocumentControl,
@ifndef DESKTOP
            @GSaveTrigger,
@endif
            @GPrintControl,
            @GAboutBox;
@ifdef OMNIGO
  GI_visMoniker = "File";
@endif
  GII_visibility = GIV_POPUP;
@ifndef OMNIGO
  ATTR_GEN_INTERACTION_GROUP_TYPE = ( GIGT_FILE_MENU );
@endif
  HINT_SEEK_MENU_BAR;
}

   /* Document control UI */
@object GenDocumentControlClass GDocumentControl = {
  GDCI_noNameText = "No Document";
  GDCI_documentGroup = @GDocumentGroup;
  GDCI_attrs = ( @default
                 | GDCA_NATIVE )
               & ~GDCA_VM_FILE;
  GDCI_features = @default &
                  ~( GDCF_SUPPORTS_TEMPLATES |
                     GDCF_SUPPORTS_USER_SETTABLE_EMPTY_DOCUMENT |
                     GDCF_SUPPORTS_USER_MAKING_SHARED_DOCUMENTS |
                     GDCF_NAME_ON_PRIMARY );
  GDCI_enableDisableList = @GDocEnableList;
}

   /* These objects become enabled when a document is opened. */
@chunk optr GDocEnableList[] = {
@ifndef DESKTOP
  @GSaveTrigger,
@endif
  @GPrintControl
};

@ifndef DESKTOP
     /* Causes open files to be saved. */
  @object GenTriggerClass GSaveTrigger = {
@ifndef DEMO
    GI_states = @default & ~GS_ENABLED;
@endif
    GI_visMoniker = "Save";
    GTI_destination = @GDocumentControl;
    GTI_actionMsg = MSG_GEN_DOCUMENT_CONTROL_INITIATE_SAVE_DOC;
  }
@endif

   /* Print control UI */
@object PrintControlClass GPrintControl = {
  PCI_attrs = @default & ~( PCA_PAGE_CONTROLS | PCA_VERIFY_PRINT ) |
              PCA_MARK_APP_BUSY |
              PCA_PROGRESS_PAGE;
  PCI_output = ( TO_APP_MODEL );
  PCI_docNameOutput = @GDocumentGroup;
  PCI_docSizeInfo = { ( 7.5 * 72 ), ( 10 * 72 ), PT_PAPER,
                      { ( 0.5 * 72 ), ( 0.5 * 72 ),
                        ( 0.5 * 72 ), ( 0.5 * 72 ) } };
}

   /* Credits and copyright messages */
@object GenInteractionClass GAboutBox = {
  GI_visMoniker = "About";
  GI_comp = @GAboutText1,
            @GAboutText2,
            @GAboutText3,
            @GAboutText4,
            @GAboutText5,
            @GAboutOkayTrigger;
  GII_visibility = GIV_DIALOG;
  ATTR_GEN_HELP_CONTEXT = "Credits";
  HINT_CENTER_CHILDREN_HORIZONTALLY;
}

@object GenGlyphClass GAboutText1 = {
  GI_visMoniker = "- Graph -";
}

@object GenGlyphClass GAboutText2 = {
  GI_visMoniker = "COMP 413 Software Engineering";
}

@object GenGlyphClass GAboutText3 = {
  GI_visMoniker = "Written by: Joe Barbara,";
}

@object GenGlyphClass GAboutText4 = {
  GI_visMoniker = "Tom Denn, Nathan Fiedler,";
}

@object GenGlyphClass GAboutText5 = {
  GI_visMoniker = "Ken Sievers, Lee Stover";
}

   /* Makes About box go away. */
@object GenTriggerClass GAboutOkayTrigger = {
  GI_attrs = @default | GA_SIGNAL_INTERACTION_COMPLETE;
  ATTR_GEN_TRIGGER_INTERACTION_COMMAND = { IC_OK };
  HINT_SEEK_REPLY_BAR;
}

   /* Provides view control. */
@object GenInteractionClass GViewGroup = {
  GI_attrs = @default | GA_KBD_SEARCH_PATH;
  GI_comp = @GViewControl,
            @GRedrawTrigger;
  GII_visibility = GIV_POPUP;
  ATTR_GEN_INTERACTION_GROUP_TYPE = ( GIGT_VIEW_MENU );
  HINT_SEEK_MENU_BAR;
}

   /* Allows zooming and scroller control. */
@object GenViewControlClass GViewControl = {
  GI_attrs = @default | GA_KBD_SEARCH_PATH;
}

   /* For view to redraw contents. */
@object GenTriggerClass GRedrawTrigger = {
  GI_attrs = @default | GA_KBD_SEARCH_PATH;
  GI_visMoniker = 'R', "Redraw";
  GI_kbdAccelerator = @specificUI F5;
  GTI_destination = GViewControl;
  GTI_actionMsg = MSG_GVC_REDRAW;
}

   /* Options menu */
@object GenInteractionClass GOptionsGroup = {
  GI_comp = @GToolControl,
            @GSaveOptsTrigger,
            @GToolbox;
  GII_visibility = GIV_POPUP;
  ATTR_GEN_INTERACTION_GROUP_TYPE = (GIGT_OPTIONS_MENU);
  HINT_SEEK_MENU_BAR;
}

   /* Toolbar controller */
@object GenToolControlClass GToolControl = {
  GI_visMoniker = 'C', "Customize Toolbars";
  @localize { "Title of dialog that allows user to rearrange tools." };
  GII_visibility = GIV_DIALOG;
  GTCI_toolboxList = @GToolboxList;
  GTCI_toolGroupList = @GToolGroupList;
}

   /* Save options */
@object GenTriggerClass GSaveOptsTrigger = {
  GI_visMoniker = 'S', "Save Configuration";
  @localize { "Tells ZTE to save the settings to the GEOS.INI file." };
  GTI_destination = process;
  GTI_actionMsg = MSG_META_SAVE_OPTIONS;
}

   /* Floating toolbox. */
@object GenInteractionClass GToolbox = {
  GI_visMoniker = "Floating Toolbox";
@ifndef DESKTOP
  GI_comp = @GPrintToolGroup,
            @GViewToolGroup;
@endif
  GII_visibility = GIV_DIALOG;
  HINT_TOOLBOX;
  HINT_EXPAND_WIDTH_TO_FIT_PARENT;
  HINT_ALLOW_CHILDREN_TO_WRAP;
  HINT_ORIENT_CHILDREN_HORIZONTALLY;
  HINT_FULL_JUSTIFY_CHILDREN_HORIZONTALLY;
  HINT_INTERACTION_MAKE_RESIZABLE;
}

   /* Pointer to toolbars and toolbar names. */
@chunk ToolboxInfo GToolboxList[] = {
  { @GToolbar, @GToolbarName },
  { @GToolbox, @GToolboxName }
};

   /* List of tool groups. */
@chunk ToolGroupInfo GToolGroupList[] = {
  { @GDocumentToolGroup },
  { @GPrintToolGroup },
  { @GViewToolGroup }
};



   /*
    * Operations on vertices.
    */
@object GenInteractionClass GVertexGroup = {
  GI_visMoniker = 'x', "Vertex";
  GI_comp = @GVertexAddTrigger,
            @GVertexRemoveTrigger,
            @GVertexRandomTrigger,
            @GVertexSelectTrigger,
            @GVertexUnselectTrigger;
  GII_visibility = GIV_POPUP;
  HINT_SEEK_MENU_BAR;
}

@object GenTriggerClass GVertexAddTrigger = {
  GI_visMoniker = 'A', "Add";
  GTI_destination = process;
  GTI_actionMsg = MSG_G_PROCESS_VERTEX_ADD;
}

@object GenTriggerClass GVertexRemoveTrigger = {
  GI_visMoniker = 'R', "Remove";
  GTI_destination = process;
  GTI_actionMsg = MSG_G_PROCESS_VERTEX_REMOVE;
}

@object GenTriggerClass GVertexRandomTrigger = {
  GI_visMoniker = 'G', "Random Generation";
  GTI_destination = process;
  GTI_actionMsg = MSG_G_PROCESS_VERTEX_RANDOM;
}

@object GenTriggerClass GVertexSelectTrigger = {
  GI_visMoniker = 'S', "Select All";
  GTI_destination = process;
  GTI_actionMsg = MSG_G_PROCESS_VERTEX_SELECT_ALL;
}

@object GenTriggerClass GVertexUnselectTrigger = {
  GI_visMoniker = 'U', "Unselect All";
  GTI_destination = process;
  GTI_actionMsg = MSG_G_PROCESS_VERTEX_UNSELECT_ALL;
}



   /*
    * Operations on edges.
    */
@object GenInteractionClass GEdgeGroup = {
  GI_visMoniker = 'E', "Edge";
  GI_comp = @GEdgeAddTrigger,
            @GEdgeRemoveTrigger,
            @GEdgeRandomTrigger,
            @GEdgeSelectTrigger,
            @GEdgeUnselectTrigger;
  GII_visibility = GIV_POPUP;
  HINT_SEEK_MENU_BAR;
}

@object GenTriggerClass GEdgeAddTrigger = {
  GI_visMoniker = 'A', "Add";
  GTI_destination = process;
  GTI_actionMsg = MSG_G_PROCESS_EDGE_ADD;
}

@object GenTriggerClass GEdgeRemoveTrigger = {
  GI_visMoniker = 'R', "Remove";
  GTI_destination = process;
  GTI_actionMsg = MSG_G_PROCESS_EDGE_REMOVE;
}

@object GenTriggerClass GEdgeRandomTrigger = {
  GI_visMoniker = 'G', "Random Generation";
  GTI_destination = process;
  GTI_actionMsg = MSG_G_PROCESS_EDGE_RANDOM;
}

@object GenTriggerClass GEdgeSelectTrigger = {
  GI_visMoniker = 'S', "Select All";
  GTI_destination = process;
  GTI_actionMsg = MSG_G_PROCESS_EDGE_SELECT_ALL;
}

@object GenTriggerClass GEdgeUnselectTrigger = {
  GI_visMoniker = 'U', "Unselect All";
  GTI_destination = process;
  GTI_actionMsg = MSG_G_PROCESS_EDGE_UNSELECT_ALL;
}



   /*
    * Various MST algorithms.
    */
@object GenInteractionClass GMSTGroup = {
  GI_visMoniker = 'M', "MST";
  GI_comp = @GMSTKruskalsTrigger,
            @GMSTPrimsTrigger,
            @GMSTBothTrigger;
  GII_visibility = GIV_POPUP;
  HINT_SEEK_MENU_BAR;
}

@object GenTriggerClass GMSTKruskalsTrigger = {
  GI_visMoniker = 'K', "Kruskal's";
  GTI_destination = process;
  GTI_actionMsg = MSG_G_PROCESS_MST_KRUSKALS;
}

@object GenTriggerClass GMSTPrimsTrigger = {
  GI_visMoniker = 'P', "Prim's";
  GTI_destination = process;
  GTI_actionMsg = MSG_G_PROCESS_MST_PRIMS;
}

@object GenTriggerClass GMSTBothTrigger = {
  GI_visMoniker = 'B', "Both Methods";
  GTI_destination = process;
  GTI_actionMsg = MSG_G_PROCESS_MST_BOTH;
}



   /*
    * Various searching algorithms.
    */
@object GenInteractionClass GSearchGroup = {
  GI_visMoniker = 'S', "Search";
  GI_comp = @GSearchBFSTrigger,
            @GSearchDFSTrigger,
            @GSearchBothTrigger;
  GII_visibility = GIV_POPUP;
  HINT_SEEK_MENU_BAR;
}

@object GenTriggerClass GSearchBFSTrigger = {
  GI_visMoniker = 'B', "Breadth First";
  GTI_destination = process;
  GTI_actionMsg = MSG_G_PROCESS_SEARCH_BFS;
}

@object GenTriggerClass GSearchDFSTrigger = {
  GI_visMoniker = 'D', "Depth First";
  GTI_destination = process;
  GTI_actionMsg = MSG_G_PROCESS_SEARCH_DFS;
}

@object GenTriggerClass GSearchBothTrigger = {
  GI_visMoniker = 'o', "Both Searches";
  GTI_destination = process;
  GTI_actionMsg = MSG_G_PROCESS_SEARCH_BOTH;
}



   /*
    * Other operations to perform.
    */
@object GenInteractionClass GOtherGroup = {
  GI_visMoniker = 't', "Other";
  GI_comp = @GShortestTrigger,
            @GCompleteTrigger;
  GII_visibility = GIV_POPUP;
  HINT_SEEK_MENU_BAR;
}

@object GenTriggerClass GShortestTrigger = {
  GI_visMoniker = 'S', "Shortest Path";
  GTI_destination = process;
  GTI_actionMsg = MSG_G_PROCESS_SHORTEST_PATH;
}

@object GenTriggerClass GCompleteTrigger = {
  GI_visMoniker = 'C', "Make Complete Graph";
  GTI_destination = process;
  GTI_actionMsg = MSG_G_PROCESS_MAKE_COMPLETE;
}



   /* Toolbar object, contains tool groups */
@object GenInteractionClass GToolbar = {
  GI_comp = @GDocumentToolGroup
@ifdef DESKTOP
            ,
            @GPrintToolGroup,
            @GViewToolGroup
@endif
            ;
  HINT_TOOLBOX;
  HINT_EXPAND_WIDTH_TO_FIT_PARENT;
  HINT_ALLOW_CHILDREN_TO_WRAP;
  HINT_ORIENT_CHILDREN_HORIZONTALLY;
}

@chunk char GToolbarName[] = "Toolbar below menu";
@chunk char GToolboxName[] = "Floating Toolbox";

   /* DocumentControl tools */
@object GenToolGroupClass GDocumentToolGroup = {
  GTGI_controller = @GDocumentControl;
  HINT_MINIMIZE_CHILD_SPACING;
  HINT_SAME_ORIENTATION_AS_PARENT;
}

   /* PrintControl tools */
@object GenToolGroupClass GPrintToolGroup = {
  GTGI_controller = @GPrintControl;
  HINT_MINIMIZE_CHILD_SPACING;
  HINT_SAME_ORIENTATION_AS_PARENT;
}

   /* ViewControl tools */
@object GenToolGroupClass GViewToolGroup = {
  GTGI_controller = @GViewControl;
  HINT_MINIMIZE_CHILD_SPACING;
  HINT_SAME_ORIENTATION_AS_PARENT;
}

   /* Keeps track of multiple displays */
@object GenDisplayGroupClass GDisplayGroup = {
  ATTR_GEN_DESTINATION_CLASS = { (ClassStruct*)&GDocumentClass };
  HINT_DEFAULT_FOCUS;
  HINT_DEFAULT_TARGET;
}



   /* Provides path to other dialog boxes. */
@object GenInteractionClass GDummyGroup = {
  GI_comp = @GPromptForNBox,
            @GAddVertexBox;
  GII_attrs = @default | GIA_NOT_USER_INITIATABLE;
}

@object GenInteractionClass GPromptForNBox = {
  GI_visMoniker = "Enter N";
  GI_comp = @GPromptForNValue,
            @GPromptForNOkayTrigger,
            @GPromptForNCancelTrigger;
  GII_attrs = @default | GIA_NOT_USER_INITIATABLE;
  GII_visibility = GIV_DIALOG;
  ATTR_GEN_HELP_CONTEXT = "dbPromptForN";
}

@object GenValueClass GPromptForNValue = {
  GI_visMoniker = "Number to create:";
  GVLI_value = MakeWWFixed( 1 );
  GVLI_minimum = MakeWWFixed( 1 );
  GVLI_maximum = MakeWWFixed( EDGE_MAX_COUNT );
}

@object GenTriggerClass GPromptForNOkayTrigger = {
  GI_visMoniker = "Ok";
  GI_attrs = @default | GA_SIGNAL_INTERACTION_COMPLETE;
  ATTR_GEN_TRIGGER_INTERACTION_COMMAND = { IC_OK };
  HINT_SEEK_REPLY_BAR;
}

@object GenTriggerClass GPromptForNCancelTrigger = {
  GI_visMoniker = "Cancel";
  GI_attrs = @default | GA_SIGNAL_INTERACTION_COMPLETE;
  ATTR_GEN_TRIGGER_INTERACTION_COMMAND = { IC_DISMISS };
  HINT_SEEK_REPLY_BAR;
}

@object GenInteractionClass GAddVertexBox = {
  GI_visMoniker = "Add Vertex";
  GI_comp = @GAddVertexXValue,
            @GAddVertexYValue,
            @GAddVertexOkayTrigger,
            @GAddVertexCancelTrigger;
  GII_attrs = @default | GIA_NOT_USER_INITIATABLE;
  GII_visibility = GIV_DIALOG;
  ATTR_GEN_HELP_CONTEXT = "dbAddVertex";
}

@object GenValueClass GAddVertexXValue = {
  GI_visMoniker = "New vertex X position:";
  GVLI_value = MakeWWFixed( 1 );
  GVLI_minimum = MakeWWFixed( 1 );
  GVLI_maximum = MakeWWFixed( 1000 );
}

@object GenValueClass GAddVertexYValue = {
  GI_visMoniker = "New vertex Y position:";
  GVLI_value = MakeWWFixed( 1 );
  GVLI_minimum = MakeWWFixed( 1 );
  GVLI_maximum = MakeWWFixed( 1000 );
}

@object GenTriggerClass GAddVertexOkayTrigger = {
  GI_visMoniker = "Ok";
  GI_attrs = @default | GA_SIGNAL_INTERACTION_COMPLETE;
  ATTR_GEN_TRIGGER_INTERACTION_COMMAND = { IC_OK };
  HINT_SEEK_REPLY_BAR;
}

@object GenTriggerClass GAddVertexCancelTrigger = {
  GI_visMoniker = "Cancel";
  GI_attrs = @default | GA_SIGNAL_INTERACTION_COMPLETE;
  ATTR_GEN_TRIGGER_INTERACTION_COMMAND = { IC_DISMISS };
  HINT_SEEK_REPLY_BAR;
}

@end Interface;

/********************************************************************
 *       DocGroupResource
 *******************************************************************/
@start DocGroupResource;

   /* This manages the documents and sends messages. */
@object GenDocumentGroupClass GDocumentGroup = {
  GDGI_attrs = ( @default | GDGA_NATIVE ) &
               ~( GDGA_VM_FILE |
                  GDGA_SUPPORTS_AUTO_SAVE |
                  GDGA_AUTOMATIC_CHANGE_NOTIFICATION |
                  GDGA_AUTOMATIC_DIRTY_NOTIFICATION );
  GDGI_untitledName = "BLANK";
  GDGI_documentControl = @GDocumentControl;
  GDGI_genDisplayGroup = @GDisplayGroup;
  GDGI_documentClass = (ClassStruct*)&GDocumentClass;
  GDGI_genDisplay = @GDisplay;
  GDGI_genView = @GView;
}

@end DocGroupResource;

/********************************************************************
 *       DisplayResource
 *     This entire resource is duplicated by the GenDocumentGroup each
 *     time it creates a new GenDocument object.
 *     Each GenDocument is linked to the GenView that is the display's
 *     child and is displayed within that GenView.
 *******************************************************************/
@start DisplayResource;

   /* Holds GenView */
@object GenDisplayClass GDisplay = {
  GI_states = @default & ~GS_USABLE;
  GI_comp = @GView;
  ATTR_GEN_DISPLAY_NOT_MINIMIZABLE;
}

   /* Displays the graph and handles input. */
@object GViewClass GView = {
  GVI_attrs = @default | GVA_CONTROLLED
                       | GVA_DRAG_SCROLLING;
  GVI_horizAttrs = @default | GVDA_SCROLLABLE
                            | GVDA_NO_LARGER_THAN_CONTENT;
  GVI_vertAttrs  = @default | GVDA_SCROLLABLE
                            | GVDA_NO_LARGER_THAN_CONTENT;
  ATTR_GEN_VIEW_DOES_NOT_ACCEPT_TEXT_INPUT;
  HINT_DEFAULT_TARGET;
  HINT_DEFAULT_FOCUS;
}

@end DisplayResource;

